The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This is an example text file in reStructuredText format. First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(3, 3)
    6

    >>> add_integer(100.3, -3)
    97

    >>> add_integer(200.0, 100.5)
    300

    >>> add_integer()


    >>> add_integer("school", 100.3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer("alx", "School")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None, "School")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(4.46, 4.0)
    8

    >>> add_integer(10, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("adc", 10)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(float('inf'),8)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('NaN'), 7)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
    
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

    >>> add_integer(a)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'b'
